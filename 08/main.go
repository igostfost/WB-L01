// Дана переменная int64. Разработать программу которая устанавливает i-й бит в 1 или 0

package main

import "fmt"

func setBit(val *int64, pos int, bitVal int) {
	// Проверяем, задан ли допустимый бит (0 или 1)
	if bitVal == 1 {
		// Устанавливаем бит в позиции pos в значении val равным 1.
		// Для этого с помощью битовой операции OR (|) устанавливаем бит в позиции pos в 1.
		// Например, если val = 0010 и pos = 3, то val | 1 << pos установит 4-й бит в 1 (т.е. 0010 | 1000 = 1010)
		*val = *val | 1<<pos
	} else if bitVal == 0 {
		// Сбрасываем бит в позиции pos в значении val.
		// Для этого с помощью битовой операции AND (&) устанавливаем бит в позиции pos в 0, а остальные биты оставляем неизменными.
		// Например, если val = 0010 и pos = 2, то val & ^(1 << pos) сбросит 3-й бит в 0 (т.е. 0010 & 1011 = 0010)
		*val = *val & ^(1 << pos)
	} else {
		// Выводим сообщение об ошибке, если задан недопустимый бит (не 0 и не 1)
		fmt.Println("Invalid Bit Value. Only 0 or 1")
	}
}
func main() {

	var x int64 = 2
	fmt.Printf("Part 1: binary: %05b, dec: %d\n", x, x)
	setBit(&x, 3, 1)
	fmt.Printf("Part 2: binary: %05b, dec: %d\n", x, x)
}
